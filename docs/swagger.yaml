definitions:
  health.HealthResponse:
    properties:
      data: {}
      error_msg:
        type: string
    type: object
  oauth.BasicUserInfo:
    properties:
      avatar_url:
        type: string
      id:
        type: integer
      nickname:
        type: string
      trust_level:
        $ref: '#/definitions/oauth.TrustLevel'
      username:
        type: string
    type: object
  oauth.CallbackRequest:
    properties:
      code:
        type: string
      state:
        type: string
    type: object
  oauth.CallbackResponse:
    properties:
      data: {}
      error_msg:
        type: string
    type: object
  oauth.GetLoginURLResponse:
    properties:
      data:
        type: string
      error_msg:
        type: string
    type: object
  oauth.LogoutResponse:
    properties:
      data: {}
      error_msg:
        type: string
    type: object
  oauth.TrustLevel:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-varnames:
    - TrustLevelNewUser
    - TrustLevelBasicUser
    - TrustLevelUser
    - TrustLevelActiveUser
    - TrustLevelLeader
  oauth.UserInfoResponse:
    properties:
      data:
        $ref: '#/definitions/oauth.BasicUserInfo'
      error_msg:
        type: string
    type: object
  project.CreateProjectRequestBody:
    properties:
      allow_same_ip:
        type: boolean
      description:
        maxLength: 1024
        type: string
      distribution_type:
        allOf:
        - $ref: '#/definitions/project.DistributionType'
        enum:
        - 0
        - 1
      end_time:
        type: string
      minimum_trust_level:
        allOf:
        - $ref: '#/definitions/oauth.TrustLevel'
        enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      name:
        maxLength: 32
        type: string
      project_items_content:
        items:
          type: string
        minItems: 1
        type: array
      project_tags:
        items:
          type: string
        type: array
      risk_level:
        maximum: 100
        minimum: 0
        type: integer
      start_time:
        type: string
    required:
    - description
    - end_time
    - name
    - project_items_content
    - project_tags
    - start_time
    type: object
  project.DistributionType:
    enum:
    - 0
    - 1
    type: integer
    x-enum-varnames:
    - DistributionTypeOneForEach
    - DistributionTypeInvite
  project.UpdateProjectRequestBody:
    properties:
      add_project_items_content:
        items:
          type: string
        type: array
      allow_same_ip:
        type: boolean
      description:
        maxLength: 1024
        type: string
      distribution_type:
        allOf:
        - $ref: '#/definitions/project.DistributionType'
        enum:
        - 0
        - 1
      end_time:
        type: string
      minimum_trust_level:
        allOf:
        - $ref: '#/definitions/oauth.TrustLevel'
        enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      name:
        maxLength: 32
        type: string
      project_items:
        items:
          properties:
            content:
              maxLength: 1024
              type: string
            id:
              minimum: 0
              type: integer
          type: object
        type: array
      project_tags:
        items:
          type: string
        type: array
      risk_level:
        maximum: 100
        minimum: 0
        type: integer
      start_time:
        type: string
    required:
    - description
    - end_time
    - name
    - project_tags
    - start_time
    type: object
  project.projectResponse:
    properties:
      data: {}
      error_msg:
        type: string
    type: object
info:
  contact: {}
  title: Linux Do CDK
  version: 0.1.0
paths:
  /api/v1/health:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/health.HealthResponse'
      tags:
      - health
  /api/v1/oauth/callback:
    post:
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/oauth.CallbackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/oauth.CallbackResponse'
      tags:
      - oauth
  /api/v1/oauth/login:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/oauth.GetLoginURLResponse'
      tags:
      - oauth
  /api/v1/oauth/logout:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/oauth.LogoutResponse'
      tags:
      - oauth
  /api/v1/oauth/user-info:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/oauth.UserInfoResponse'
      tags:
      - oauth
  /api/v1/project:
    post:
      consumes:
      - application/json
      description: 创建新项目，并将项目子项(待分发的Key)存入Redis List
      parameters:
      - description: 项目信息
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/project.CreateProjectRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.projectResponse'
      summary: 创建项目
      tags:
      - 项目管理
  /api/v1/project/{id}:
    delete:
      consumes:
      - application/json
      description: 删除项目(已领取的发放不允许删除)
      parameters:
      - description: 项目ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.projectResponse'
      summary: 删除项目
      tags:
      - 项目管理
    put:
      consumes:
      - application/json
      description: 编辑现有项目信息
      parameters:
      - description: 项目ID
        in: path
        name: id
        required: true
        type: string
      - description: 项目信息
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/project.UpdateProjectRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.projectResponse'
      summary: 编辑项目
      tags:
      - 项目管理
swagger: "2.0"
